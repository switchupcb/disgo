package tools

import (
	"fmt"
	"go/format"
	"os"
	"strings"
)

const (
	bundleWarning   = `// Code generated by golang.org/x/tools/cmd/bundle. DO NOT EDIT.`
	generateWarning = `//go:generate bundle -o disgo.go -dst . -pkg disgo -prefix "" ./wrapper`
)

var (
	bundlerWarning = []byte(`// Code generated by github.com/switchupcb/disgo/_gen/tools/bundle. DO NOT EDIT.` + "\n")
)

// Replace replaces fields that have comments removed after being field aligned.
func Replace(filepath string) error {
	data, err := os.ReadFile(filepath)
	if err != nil {
		return fmt.Errorf("error reading generated %v file: %v", filepath, err)
	}

	content := string(data)
	for fieldaligned, fixed := range replaced {
		content = strings.Replace(content, fieldaligned, fixed, 1)
	}

	content = strings.Replace(content, bundleWarning, "", 1)
	content = strings.Replace(content, generateWarning, "", 1)

	// gofmt
	contentdata := []byte(content)
	fmtdata, err := format.Source(contentdata)
	if err != nil {
		return fmt.Errorf("an error occurred while formatting the generated code.\n%w", err)
	}

	var output []byte
	output = append(output, bundlerWarning...)
	output = append(output, fmtdata...)

	if err = os.WriteFile(filepath, output, filemodewrite); err != nil {
		return fmt.Errorf("error while writing file", err)
	}

	return nil
}
